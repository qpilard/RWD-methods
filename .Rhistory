table(TREAT)
set.seed(42)  # Set seed for reproducibility
# Inverse logit function
inv.logit <- function(x) {
x<-exp(x)/(1+exp(x))
return(x)
}
# Logit function
logit <- function(x) {
x<-log(x/(1-x))
return(x)
}
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- sample(18:80, N, replace = TRUE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- sample(0:63, N, replace = TRUE)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
# Generate treatment initiated at diagnosis (0 = Sertralex, 1 = Duloxyn)
TREAT <- numeric(N)
for (i in 1:N) {
TREAT[i] <- rbinom(1, 1, inv.logit(13.5 +
-0.2*AGE +
-0.2*GENDER +
0.2*BECK +
-0.2*SOCIO_ECO))
}
table(TREAT)
mean(AGE)
18+80
98/2
?rnorm
AGE <- rnorm(N, mean = 49, sd = 20, replace = TRUE)
AGE <- rnorm(N, mean = 49, sd = 20)
AGE
# Generate age at diagnosis (18 to 80 years)
AGE <- rnorm(N, mean = 49, sd = 10)
min(AGE)
round(rnorm(N, mean = 49, sd = 10),0)
min(AGE)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
min(AGE)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
min(AGE)
GENDER <- sample(0:1, N, replace = TRUE)
GENDER
0+63/2
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK
min(BECK)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
min(BECK)
max(BECK)
set.seed(42)  # Set seed for reproducibility
# Inverse logit function
inv.logit <- function(x) {
x<-exp(x)/(1+exp(x))
return(x)
}
# Logit function
logit <- function(x) {
x<-log(x/(1-x))
return(x)
}
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
mean(AGE)
mean(GENDER)
mean(BECK)
mean(SOCIO_ECO)
mean_AGE<-mean(AGE)
mean_GENDER<-mean(GENDER)
mean_BECK<-mean(BECK)
mean_SOCIO_ECO<-mean(SOCIO_ECO)
-(-0.2*mean_AGE-0.2*mean_GENDER+0.2*mean_BECK-0.2*mean_SOCIO_ECO)
set.seed(42)  # Set seed for reproducibility
# Inverse logit function
inv.logit <- function(x) {
x<-exp(x)/(1+exp(x))
return(x)
}
# Logit function
logit <- function(x) {
x<-log(x/(1-x))
return(x)
}
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
mean_AGE<-mean(AGE)
mean_GENDER<-mean(GENDER)
mean_BECK<-mean(BECK)
mean_SOCIO_ECO<-mean(SOCIO_ECO)
-(-0.2*mean_AGE-0.2*mean_GENDER+0.2*mean_BECK-0.2*mean_SOCIO_ECO)
eta <- 4.321681 +
-0.2*mean_AGE +
-0.2*mean_GENDER +
0.2*mean_BECK +
-0.2*mean_SOCIO_ECO
eta
set.seed(42)  # Set seed for reproducibility
# Inverse logit function
inv.logit <- function(x) {
x<-exp(x)/(1+exp(x))
return(x)
}
# Logit function
logit <- function(x) {
x<-log(x/(1-x))
return(x)
}
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
mean_AGE<-mean(AGE)
mean_GENDER<-mean(GENDER)
mean_BECK<-mean(BECK)
mean_SOCIO_ECO<-mean(SOCIO_ECO)
# Generate treatment initiated at diagnosis (0 = Sertralex, 1 = Duloxyn)
TREAT <- numeric(N)
eta <- 4.321681 + -0.2*AGE + -0.2*GENDER + 0.2*BECK + -0.2*SOCIO_ECO
for (i in 1:N) {
TREAT[i] <- rbinom(1, 1, 1/(1+exp(-(eta))))
}
table(TREAT)
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
#SOCIO_ECO <- sample(1:5, N, replace = TRUE)
mean_AGE<-mean(AGE)
mean_GENDER<-mean(GENDER)
mean_BECK<-mean(BECK)
#mean_SOCIO_ECO<-mean(SOCIO_ECO)
# Generate treatment initiated at diagnosis (0 = Sertralex, 1 = Duloxyn)
TREAT <- numeric(N)
eta <- 4.321681 + -0.2*AGE + -0.2*GENDER + 0.2*BECK #+ -0.2*SOCIO_ECO
for (i in 1:N) {
TREAT[i] <- rbinom(1, 1, 1/(1+exp(-(eta))))
}
table(TREAT)
TREAT <- numeric(N)
for (i in 1:N) {
eta <- 4.321681 + -0.2*AGE[i] + -0.2*GENDER[i] + 0.2*BECK[i] + -0.2*SOCIO_ECO[i]
TREAT[i] <- rbinom(1, 1, 1/(1+exp(-eta)))
}
table(TREAT)
set.seed(42)  # Set seed for reproducibility
# Inverse logit function
inv.logit <- function(x) {
x<-exp(x)/(1+exp(x))
return(x)
}
# Logit function
logit <- function(x) {
x<-log(x/(1-x))
return(x)
}
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
mean_AGE<-mean(AGE)
mean_GENDER<-mean(GENDER)
mean_BECK<-mean(BECK)
#mean_SOCIO_ECO<-mean(SOCIO_ECO)
# Generate treatment initiated at diagnosis (0 = Sertralex, 1 = Duloxyn)
TREAT <- numeric(N)
for (i in 1:N) {
eta <- 4.321681 + -0.2*AGE[i] + -0.2*GENDER[i] + 0.2*BECK[i] + -0.2*SOCIO_ECO[i]
TREAT[i] <- rbinom(1, 1, 1/(1+exp(-eta)))
}
table(TREAT)
df <- data.frame(ID,
AGE,
GENDER,
BECK,
SOCIO_ECO)
model<-glm(TREAT~AGE+GENDER+BECK+SOCIO_ECO,family=binomial(link = "logit"),data = df)
summary(model)
exp(coefficients(model))
mean_AGE<-mean(AGE)
mean_GENDER<-mean(GENDER)
mean_BECK<-mean(BECK)
mean_SOCIO_ECO_2<-mean(SOCIO_ECO_2)
set.seed(42)  # Set seed for reproducibility
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
# Generate dummy variables , excluding the first category as the reference
SOCIO_ECO_2 <- ifelse(SOCIO_ECO == 2, 1, 0)
SOCIO_ECO_3 <- ifelse(SOCIO_ECO == 3, 1, 0)
SOCIO_ECO_4 <- ifelse(SOCIO_ECO == 4, 1, 0)
SOCIO_ECO_5 <- ifelse(SOCIO_ECO == 5, 1, 0)
mean_AGE<-mean(AGE)
mean_GENDER<-mean(GENDER)
mean_BECK<-mean(BECK)
mean_SOCIO_ECO_2<-mean(SOCIO_ECO_2)
mean_SOCIO_ECO_3<-mean(SOCIO_ECO_3)
mean_SOCIO_ECO_4<-mean(SOCIO_ECO_4)
mean_SOCIO_ECO_5<-mean(SOCIO_ECO_5)
mean_AGE
eta <- -(-0.2*mean_AGE + -0.2*mean_GENDER + 0.2*mean_BECK + -0.3*mean_SOCIO_ECO_2 + -0.1*mean_SOCIO_ECO_3 + 0.1*mean_SOCIO_ECO_4 + 0.3*mean_SOCIO_ECO_5)
eta
set.seed(42)  # Set seed for reproducibility
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
# Generate dummy variables , excluding the first category as the reference
SOCIO_ECO_2 <- ifelse(SOCIO_ECO == 2, 1, 0)
SOCIO_ECO_3 <- ifelse(SOCIO_ECO == 3, 1, 0)
SOCIO_ECO_4 <- ifelse(SOCIO_ECO == 4, 1, 0)
SOCIO_ECO_5 <- ifelse(SOCIO_ECO == 5, 1, 0)
mean_AGE<-mean(AGE)
mean_GENDER<-mean(GENDER)
mean_BECK<-mean(BECK)
mean_SOCIO_ECO_2<-mean(SOCIO_ECO_2)
mean_SOCIO_ECO_3<-mean(SOCIO_ECO_3)
mean_SOCIO_ECO_4<-mean(SOCIO_ECO_4)
mean_SOCIO_ECO_5<-mean(SOCIO_ECO_5)
# Generate treatment initiated at diagnosis (0 = Sertralex, 1 = Duloxyn)
TREAT <- numeric(N)
for (i in 1:N) {
eta <- 3.707395 + -0.2*AGE[i] + -0.2*GENDER[i] + 0.2*BECK[i] + -0.3*SOCIO_ECO_2[i] + -0.1*SOCIO_ECO_3[i] + 0.1*SOCIO_ECO_4[i] + 0.3*SOCIO_ECO_5[i]
TREAT[i] <- rbinom(1, 1, 1/(1+exp(-eta)))
}
table(TREAT)
df <- data.frame(ID,
AGE,
GENDER,
BECK,
SOCIO_ECO)
model<-glm(TREAT~AGE+GENDER+BECK+SOCIO_ECO,family=binomial(link = "logit"),data = df)
summary(model)
exp(coefficients(model))
set.seed(42)  # Set seed for reproducibility
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
# Generate dummy variables , excluding the first category as the reference
SOCIO_ECO_2 <- ifelse(SOCIO_ECO == 2, 1, 0)
SOCIO_ECO_3 <- ifelse(SOCIO_ECO == 3, 1, 0)
SOCIO_ECO_4 <- ifelse(SOCIO_ECO == 4, 1, 0)
SOCIO_ECO_5 <- ifelse(SOCIO_ECO == 5, 1, 0)
# Generate treatment initiated at diagnosis (0 = Sertralex, 1 = Duloxyn)
TREAT <- numeric(N)
for (i in 1:N) {
eta <- 3.707395 + -0.2*AGE[i] + -0.2*GENDER[i] + 0.2*BECK[i] + -0.3*SOCIO_ECO_2[i] + -0.1*SOCIO_ECO_3[i] + 0.1*SOCIO_ECO_4[i] + 0.3*SOCIO_ECO_5[i]
TREAT[i] <- rbinom(1, 1, 1/(1+exp(-eta)))
}
set.seed(42)  # Set seed for reproducibility
# Parameters
N <- 595  # Number of patients
# Generate ID
ID <- 1:N
# Generate age at diagnosis (18 to 80 years)
AGE <- round(rnorm(N, mean = 49, sd = 10),0)
AGE <- ifelse(AGE<18,18,AGE)
AGE <- ifelse(AGE>80,80,AGE)
# Generate gender (0 = Male, 1 = Female)
GENDER <- sample(0:1, N, replace = TRUE)
# Generate Beck Depression Inventory score at diagnosis (0 to 63)
BECK <- round(rnorm(N, mean = 30, sd = 10),0)
BECK <- ifelse(BECK<0,0,BECK)
BECK <- ifelse(BECK>63,63,BECK)
# Generate socioeconomic status (1 to 5)
SOCIO_ECO <- sample(1:5, N, replace = TRUE)
# Generate dummy variables , excluding the first category as the reference
SOCIO_ECO_2 <- ifelse(SOCIO_ECO == 2, 1, 0)
SOCIO_ECO_3 <- ifelse(SOCIO_ECO == 3, 1, 0)
SOCIO_ECO_4 <- ifelse(SOCIO_ECO == 4, 1, 0)
SOCIO_ECO_5 <- ifelse(SOCIO_ECO == 5, 1, 0)
#Vector of coefficients
coefficients <- c(intercept = 3.707395,
age = -0.2,
gender = -0.2,
beck = 0.2,
socio_eco_2 = -0.3,
socio_eco_3 = -0.1,
socio_eco_4 = 0.1,
socio_eco_5 = 0.3)
# Generate treatment initiated at diagnosis (0 = Sertralex, 1 = Duloxyn)
TREAT <- numeric(N)
for (i in 1:N) {
eta <- coefficients["intercept"] +
coefficients["age"] * AGE[i] +
coefficients["gender"] * GENDER[i] +
coefficients["beck"] * BECK[i] +
coefficients["socio_eco_2"] * SOCIO_ECO_2[i] +
coefficients["socio_eco_3"] * SOCIO_ECO_3[i] +
coefficients["socio_eco_4"] * SOCIO_ECO_4[i] +
coefficients["socio_eco_5"] * SOCIO_ECO_5[i]
TREAT[i] <- rbinom(1, 1, 1 / (1 + exp(-eta)))
}
exp(-.2)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE, repos = "https://cloud.r-project.org")
sapply(pkg, require, character.only = TRUE)
}
list.of.packages <- c("dagitty",
"ggdag",
"ggplot2")
ipak(list.of.packages)
# Define the DAG structure using dagitty syntax
dag_data <- dagitty("dag {
# Nodes (exposure, outcome, and additional variables)
T0 [exposure, pos='-1.579,-0.054']
T1 [exposure, pos='-1.033,-0.185']
Y [outcome, pos='-0.528,-0.052']
Z0 [pos='-1.580,-0.392']
Z1 [pos='-1.031,-0.385']
# Edges (causal relationships)
T0 -> T1
T0 -> Y
T1 -> Y
Z0 -> T0
Z0 -> T1
Z0 -> Y [pos='-0.791,-0.747']
Z0 -> Z1
Z1 -> T1
Z1 -> Y
}")
dag_data <- dagitty("dag {
T0 [exposure, pos='-1.579,-0.054']
T1 [exposure, pos='-1.033,-0.185']
Y [outcome, pos='-0.528,-0.052']
Z0 [pos='-1.580,-0.392']
Z1 [pos='-1.031,-0.385']
T0 -> T1
T0 -> Y
T1 -> Y
Z0 -> T0
Z0 -> T1
Z0 -> Y [pos='-0.791,-0.747']
Z0 -> Z1
Z1 -> T1
Z1 -> Y
}")
dag_data <- dagitty("dag {
T0 [exposure]
T1 [exposure]
Y [outcome]
Z0
Z1
T0 -> T1
T0 -> Y
T1 -> Y
Z0 -> T0
Z0 -> T1
Z0 -> Y
Z0 -> Z1
Z1 -> T1
Z1 -> Y
}")
ggdag(dag_data, layout = "manual") +
ggtitle("DAG Representation") +
theme_dag()
dag_data
dag_data <- dagitty("dag {
T0 [exposure]
T1 [exposure]
Y [outcome]
Z0
Z1
T0 -> T1
T0 -> Y
T1 -> Y
Z0 -> T0
Z0 -> T1
Z0 -> Y
Z0 -> Z1
Z1 -> T1
Z1 -> Y
}")
# Plot the DAG using ggdag
ggdag(dag_data, layout = "manual")
library(dagitty)
library(ggdag)
dag_data <- dagitty("dag {
T0 [exposure]
T1 [exposure]
Y [outcome]
Z0
Z1
T0 -> T1
T0 -> Y
T1 -> Y
Z0 -> T0
Z0 -> T1
Z0 -> Y
Z0 -> Z1
Z1 -> T1
Z1 -> Y
}")
ggdag(dag_data, layout = "manual")
# Plot the DAG using ggdag
ggdag(dag_data)
ggdag(dag_data, layout="circle")
ggdag(dag_data)+theme_dag()
